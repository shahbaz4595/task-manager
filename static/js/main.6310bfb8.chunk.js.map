{"version":3,"sources":["contexts/TaskContext.js","components/Navbar.js","components/TaskDetails.js","components/TaskList.js","components/TaskForm.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["TaskContext","createContext","TaskContextProvider","props","localData","localStorage","getItem","initialValue","JSON","parse","useState","tasks","setTasks","useEffect","setItem","stringify","Provider","value","addTask","title","id","uuidv4","removeTask","filter","task","children","Navbar","useContext","Date","toLocaleString","className","length","TaskDetails","onClick","TaskList","map","NewTaskForm","setTitle","onSubmit","e","preventDefault","type","placeholder","onChange","target","required","Footer","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAGaA,EAAcC,0BA4BZC,EA1Ba,SAACC,GAEzB,IAAMC,EAAYC,aAAaC,QAAQ,SACjCC,EAAeH,EAAWI,KAAKC,MAAML,GAAY,GACvD,EAA0BM,mBAASH,GAAnC,mBAAOI,EAAP,KAAcC,EAAd,KAeA,OALAC,qBAAU,WACNR,aAAaS,QAAQ,QAASN,KAAKO,UAAUJ,MAE9C,CAACA,IAGA,cAACX,EAAYgB,SAAb,CAAsBC,MAAO,CAACN,QAAOO,QAdzB,SAACC,GACbP,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAACQ,QAAOC,GAAIC,mBAacC,WAV/B,SAACF,GAChBR,EAASD,EAAMY,QAAO,SAAAC,GAAI,OAAIA,EAAKJ,KAAOA,QAS1C,SACKjB,EAAMsB,YCJJC,EAlBA,WACX,IAAOf,EAASgB,qBAAW3B,GAApBW,OACI,IAAIiB,MAAOC,iBACtB,OACI,sBAAKC,UAAU,SAAf,UACI,8CAGA,oDACwBnB,EAAMoB,OAD9B,+BCAGC,EATK,SAAC,GAAY,IAAXR,EAAU,EAAVA,KACXF,EAAcK,qBAAW3B,GAAzBsB,WACP,OACI,oBAAIW,QAAS,kBAAKX,EAAWE,EAAKJ,KAAlC,SACI,qBAAKU,UAAU,QAAf,SAAwBN,EAAKL,WCiB1Be,EAnBE,WAEb,IAAQvB,EAAUgB,qBAAW3B,GAArBW,MACR,OAAOA,EAAMoB,OACT,qBAAKD,UAAU,YAAf,SACI,6BACKnB,EAAMwB,KAAI,SAAAX,GACP,OACE,cAAC,EAAD,CAAeA,KAAMA,GAAWA,EAAKJ,WAOlD,qBAAKU,UAAU,QAAf,kDCEMM,EAnBK,WAChB,IAAQlB,EAAYS,qBAAW3B,GAAvBkB,QACR,EAA0BR,mBAAS,IAAnC,mBAAOS,EAAP,KAAckB,EAAd,KAOA,OACI,uBAAMC,SANW,SAACC,GAClBA,EAAEC,iBACFtB,EAAQC,GACRkB,EAAS,KAGT,UACI,uBAAOI,KAAK,OAAOC,YAAY,iBAAiBzB,MAAOE,EACvDwB,SAAU,SAACJ,GAAD,OAAOF,EAASE,EAAEK,OAAO3B,QAAQ4B,UAAQ,IAEnD,uBAAOJ,KAAK,SAASxB,MAAM,iBCPxB6B,EARA,WACX,OACI,qBAAKhB,UAAU,SAAf,SACA,8BAAG,wCAAH,iBAAoC,mBAAGiB,KAAK,6BAA6BH,OAAO,SAA5C,gCCe7BI,MAbf,WACE,OACE,sBAAKlB,UAAU,MAAf,UACE,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,EAAD,QCHSmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6310bfb8.chunk.js","sourcesContent":["import React, {createContext, useState, useEffect} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\nexport const TaskContext = createContext();\r\n\r\nconst TaskContextProvider = (props) => {\r\n\r\n    const localData = localStorage.getItem('tasks');\r\n    const initialValue = localData? JSON.parse(localData): [];\r\n    const [tasks, setTasks] = useState(initialValue);\r\n\r\n    const addTask = (title) => {\r\n        setTasks([...tasks, {title, id: uuidv4()}])\r\n    };\r\n\r\n    const removeTask = (id) =>{\r\n        setTasks(tasks.filter(task => task.id !== id))\r\n    }\r\n\r\n    useEffect(()=>{\r\n        localStorage.setItem('tasks', JSON.stringify(tasks))\r\n\r\n    }, [tasks]);\r\n\r\n    return ( \r\n        <TaskContext.Provider value={{tasks, addTask, removeTask}}>\r\n            {props.children}\r\n        </TaskContext.Provider>\r\n     );\r\n}\r\n \r\nexport default TaskContextProvider;\r\n","import React, {useContext} from 'react'\r\nimport Moment from 'react-moment';\r\nimport { TaskContext } from '../contexts/TaskContext';\r\n\r\nconst Navbar = () => {\r\n    const {tasks} = useContext(TaskContext);\r\n    let date = new Date().toLocaleString();\r\n    return ( \r\n        <div className=\"navbar\">\r\n            <h1>\r\n                Task Manager\r\n            </h1>\r\n            <p>\r\n                Currently you have {tasks.length} tasks to complete...\r\n            </p>\r\n            {/* <p>\r\n            <Moment>{date}</Moment>\r\n            </p> */}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Navbar;","import React, {useContext} from 'react';\r\nimport { TaskContext } from '../contexts/TaskContext';\r\n\r\nconst TaskDetails = ({task}) => {\r\n    const {removeTask} = useContext(TaskContext);\r\n    return ( \r\n        <li onClick={()=> removeTask(task.id)}>\r\n            <div className=\"title\">{task.title}</div>\r\n        </li>\r\n     );\r\n}\r\n \r\nexport default TaskDetails;","import React, {useContext} from 'react';\r\nimport { TaskContext } from '../contexts/TaskContext';\r\nimport TaskDetails from './TaskDetails';\r\n \r\n\r\nconst TaskList = () => {\r\n\r\n    const { tasks } = useContext(TaskContext);\r\n    return tasks.length?  ( \r\n        <div className=\"task-list\">\r\n            <ul>\r\n                {tasks.map(task=>{\r\n                    return (\r\n                      <TaskDetails   task={task} key={task.id}/>\r\n                    // <TaskDetails task={task} key={task.id}/>\r\n                    )\r\n                })}\r\n            </ul>\r\n        </div>\r\n     ):(\r\n         <div className=\"empty\">No task for today, Enjoy your day! </div>\r\n     );\r\n}\r\n \r\nexport default TaskList;\r\n\r\n\r\n","import React, {useContext, useState} from 'react';\r\nimport { TaskContext } from '../contexts/TaskContext';\r\n\r\nconst NewTaskForm = () => {\r\n    const { addTask } = useContext(TaskContext);\r\n    const [title, setTitle] = useState('');\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        addTask(title);\r\n        setTitle('');\r\n    }\r\n    return ( \r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" placeholder=\"Enter the task\" value={title}\r\n            onChange={(e) => setTitle(e.target.value)} required/>\r\n\r\n            <input type=\"submit\" value=\"Add task\" />\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default NewTaskForm;\r\n\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return ( \r\n        <div className=\"footer\">\r\n        <p><span>&copy;</span> Developed by <a href=\"https://www.shahbazkhan.in\" target=\"_blank\">Shahbaz Khan</a></p>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Footer;","import Navbar from \"./components/Navbar\";\nimport TaskContextProvider from \"./contexts/TaskContext\";\nimport TaskList from \"./components/TaskList\";\nimport NewTaskForm from \"./components/TaskForm\";\nimport Footer from \"./components/Footer\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskContextProvider>\n        <Navbar/>\n        <TaskList/>\n        <NewTaskForm/>\n      </TaskContextProvider>\n      <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}